--- DFRobot_BMX160.cpp
+++ DFRobot_BMX160.cpp
@@ -203,21 +203,23 @@
     int16_t x=0,y=0,z=0;
     // put your main code here, to run repeatedly:
     readReg(BMX160_MAG_DATA_ADDR, data, 23);
+    const double imu_low = -250 * DEG_TO_RAD;
+    const double imu_hi = 250 * DEG_TO_RAD;
     if(magn){
         x = (int16_t) (((uint16_t)data[1] << 8) | data[0]);
         y = (int16_t) (((uint16_t)data[3] << 8) | data[2]);
         z = (int16_t) (((uint16_t)data[5] << 8) | data[4]);
-        magn->x = x * BMX160_MAGN_UT_LSB;
-        magn->y = y * BMX160_MAGN_UT_LSB;
-        magn->z = z * BMX160_MAGN_UT_LSB;
+        magn->x = (x * BMX160_MAGN_UT_LSB - (-82.5)) * 0.81126126;
+        magn->y = (y * BMX160_MAGN_UT_LSB - (-37.5)) * 0.69806202;
+        magn->z = (z * BMX160_MAGN_UT_LSB - (-36.6)) * 2.986733;
     }
     if(gyro){
         x = (int16_t) (((uint16_t)data[9] << 8) | data[8]);
         y = (int16_t) (((uint16_t)data[11] << 8) | data[10]);
         z = (int16_t) (((uint16_t)data[13] << 8) | data[12]);
-        gyro->x = x * gyroRange;
-        gyro->y = y * gyroRange;
-        gyro->z = z * gyroRange;
+        gyro->x = constrain((double) x * gyroRange / 7.2 + 0.04, imu_low, imu_hi);
+        gyro->y = constrain((double) y * gyroRange / 7.2 + 0.04, imu_low, imu_hi);
+        gyro->z = constrain((double) z * gyroRange / 7.2 - 0.03, imu_low, imu_hi);
     }
     if(accel){
         x = (int16_t) (((uint16_t)data[15] << 8) | data[14]);
